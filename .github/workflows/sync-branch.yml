name: Sync
on:
  push:
    branches: [ branch_1, branch_2 ]
  pull_request:
    types: [synchronize]
    branches: [ branch_1, branch_2 ]

jobs:
  sync-branches:
    runs-on: ubuntu-latest
    name: Syncing branches
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: check if prs are dirty
        uses: eps1lon/actions-label-merge-conflict@releases/2.x
        if: env.LABELING_TOKEN != '' && env.LABELING_TOKEN != null
        id: check
        with:
          dirtyLabel: "conflicting"
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          continueOnMissingPermissions: true
          commentOnDirty: 'This pull request has conflicting changes, the author must resolve the conflicts before this pull request can be merged.'
          commentOnClean: 'Conflicts have been resolved. A maintainer will take a look shortly.'
        env:
          LABELING_TOKEN: ${{ secrets.GITHUB_TOKEN }}    
      - id: automerge
        name: automerge
        uses: pascalgn/automerge-action@v0.15.2
        env: 
          GITHUB_TOKEN: "${{secrets.GITHUB_TOKEN}}"
          MERGE_REQUIRED_APPROVALS: 1
      - name: automerge-feedback
        if: steps.automerge.outputs.mergeResult == 'merged'
        run: |
          echo "Pull request ${{ steps.automerge.outputs.pullRequestNumber }} merged!"


# name: Opening pull request
      #     id: pull
      #     uses: tretuna/sync-branches@1.4.0
      #     with:
      #       GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      #       FROM_BRANCH: "branch_1"
      #       TO_BRANCH: "branch_2"  