#https://www.jessesquires.com/blog/2021/08/24/useful-label-based-github-actions-workflows/

name: Detect Merge Conflicts When Commits Are pushed to the main branch

on:
  push:
    branch:
    - branch_1

jobs:
  createPullRequest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Make changes to pull request
        run: date +%s > report.txt

      - name: Create Pull Request Against branch_2 branch
        id: cpr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: '[AUTO] ${{ github.sha }} has merge conflicts with branch_2 branch'
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          signoff: false
          branch: example-patches # commit branch
          base: branch_2
          delete-branch: true
          title: '[AUTO] Resolve merge conflicts with branch_2 branch'
          body: |
            This PR is auto-generated. \n
          # Resolves: ${{ github.event.pull_request.number }}
          labels: |
            report
            automated pr
          assignees: sonalivdeshpande
          reviewers: sonalivdeshpande
          team-reviewers: |
            sonalivdeshpande
          milestone: 1
          draft: false

# jobs:
#   check-conflicts:
#     if: ${{ github.event.label.name != 'do-not-merge-in-branch_2' }}
#     runs-on: ubuntu-latest
#     steps:
#     - name: Use node version 14.x
#       uses: actions/setup-node@v1
#       with:
#         node-version: 14.x
#     - uses: actions/checkout@v2
#       with:
#         ref: ${{ github.event.inputs.branch_name || github.event.client_payload.branch_name }}
#         fetch-depth: 0
#     - run: |
#         git config user.email "syncbranchbot@microsoft.com"
#         git config user.name "Sync-Branch Bot"
#         echo ${{ github.sha }}
#         git fetch origin branch_2
#         git checkout branch_2
#         git merge ${{ github.sha }}
#         git push
#   # create-pr-resolving-conflicts: # https://github.com/peter-evans/create-pull-request
#   create-pr-resolving-conflicts:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3

#       - name: Make changes to pull request
#         run: date +%s > report.txt

#       - name: Create Pull Request Against branch_2 branch
#         id: cpr
#         uses: peter-evans/create-pull-request@v4
#         with:
#           token: ${{ secrets.GITHUB_TOKEN }}
#           commit-message: 'AUTO has merge conflicts with branch_2 branch'
#           committer: GitHub <noreply@github.com>
#           author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
#           signoff: false
#           branch: example-patches # commit branch
#           base: branch_2
#           delete-branch: true
#           title: '[AUTO] Resolve merge conflicts with branch_2 branch'
#           body: |
#             This PR is auto-generated. \n
#           # Resolves: ${{ github.event.pull_request.number }}
#           labels: |
#             report
#             automated pr
#           assignees: sonalivdeshpande
#           reviewers: sonalivdeshpande
#           team-reviewers: |
#             sonalivdeshpande
#           milestone: 1
#           draft: false
#   add-comment:
#     runs-on: ubuntu-latest
#     needs: [check-conflicts, create-pr-resolving-conflicts]
#     if: needs.check-conflicts.result != 'failure'
#     steps:
#       - name:  add-conflict-comment
#         uses: thollander/actions-comment-pull-request@v1
#         with:
#           message: "THIS COMMIT HAD MERGE CONFLICTS WITH NEXT BRANCH. \n Resolves: ${{ steps.create-pr-resolving-conflicts.outputs.pull-request-number }}"
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


